% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mean_DF.R
\name{mean_DF}
\alias{mean_DF}
\title{Compute the mean damage factors and plot mean damage factor against peak ground acceleration (PGA).}
\usage{
mean_DF(model, data, upper.bin, bin.length, ex.prob = NULL, plot = FALSE)
}
\arguments{
\item{model}{An ordinal model fitted for \code{data} using \code{polr} from the R package \code{MASS}.}

\item{data}{A dataframe with the columns \code{CDF} (ordered factor), \code{logPGA} (numeric), \code{PGA} (numeric), \code{Easting} (numeric) and \code{Northing} (numeric).}

\item{upper.bin}{A vector containing the unique upper bounds of the damage bins. This should have length one less than the number of damage states.}

\item{bin.length}{A vector containing the length of each damage bin. This should have length equal to the number of damage states, and start and end with 1 since we assume point masses at the damage bin according to zero and complete damage.}

\item{ex.prob}{A dataframe with the columns \code{PGA}, \code{CDF} and \code{ex.prob} (the exceedance probability of the \code{CDF} level at the \code{PGA} value) such as the output of \code{frag_curve}. This is only required if we wish to plot the mean damage factor curve, i.e. set \code{plot = TRUE}.}

\item{plot}{A logical value indicating if the example probability density and mean damage factor curve should be plotted.}
}
\value{
A vector of estimated mean damage factors corresponding to the rows in \code{data}.
}
\description{
Compute the mean damage factors and plot mean damage factor against peak ground acceleration (PGA).
}
\examples{
library(MASS)

data(damage_simulation)

data.subset.1 <- damage_simulation[damage_simulation$building_cat == 1, ]

frag.model.1 <- polr(CDF ~ logPGA, data = data.subset.1,
                     method = "probit", Hess = TRUE)
ex.prob.1 <- frag_curve(frag.model.1, data = data.subset.1)

upper.bin <- c(0, 1, 10, 30, 60, 100)
bin.length <- c(1, 1, 10, 20, 30, 40, 1)
mDF_vector <- mean_DF(frag.model.1, data = data.subset.1, upper.bin,
                      bin.length, ex.prob = ex.prob.1, plot = TRUE)
}
